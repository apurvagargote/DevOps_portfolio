---
- name: Configure Portfolio Application Server
  hosts: app_servers
  become: yes
  
  vars:
    docker_packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    app_directory: /opt/portfolio
    docker_compose_version: "2.12.2"
  
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"
    
    - name: Install required packages
      package:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
      when: ansible_os_family == "Debian"
    
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: ansible_os_family == "Debian"
    
    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present
      when: ansible_os_family == "Debian"
    
    - name: Install Docker packages
      package:
        name: "{{ docker_packages }}"
        state: present
    
    - name: Install Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/v{{ docker_compose_version }}/docker-compose-{{ ansible_system }}-{{ ansible_architecture }}"
        dest: /usr/local/bin/docker-compose
        mode: '0755'
    
    - name: Create app directory
      file:
        path: "{{ app_directory }}"
        state: directory
        mode: '0755'
    
    - name: Copy Docker Compose file
      template:
        src: docker-compose.yml.j2
        dest: "{{ app_directory }}/docker-compose.yml"
    
    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes
    
    - name: Deploy application with Docker Compose
      community.docker.docker_compose:
        project_src: "{{ app_directory }}"
        state: present
      register: output
    
    - name: Install Prometheus Node Exporter
      package:
        name: prometheus-node-exporter
        state: present
      when: ansible_os_family == "Debian"
    
    - name: Start and enable Node Exporter
      service:
        name: prometheus-node-exporter
        state: started
        enabled: yes
      when: ansible_os_family == "Debian"